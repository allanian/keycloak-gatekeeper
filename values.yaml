# Default values for keycloak-gatekeeper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/keycloak/keycloak-gatekeeper
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  hosts:
    - host: chart.example.com
      paths:
      - path: "/"
        pathType: "Prefix"
        service:
          name: keycloak-gatekeeper
          port:
            name: http
  tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# URL for OpenID autoconfiguration
# On Keycloak <server>/auth/realms/<realm_name>
# Говорим где мы будем авторизовываться у OIDC провайдера
discoveryURL: "https://keycloak.example.com/auth/realms/example_realm"

# Service to proxy after successful authentication
# upstreamURL: http://my-service.my-namespace.svc.cluster.local:8088
upstreamURL: "https://k8s-dash.example.ru"
# skip upstream url tls verification
skipUpstreamTlsVerify: false

# skip OpenID provider url tls verification
# Пропускаем проверку сертификата, если у нас самоподписанный
skipOpenidProviderTlsVerify: true

# enable a default denial on all requests, you have to explicitly say what is permitted (recommended)
defaultDeny: true

# enable http logging of the requests
logging: true

# enables the handling of the refresh tokens
refreshTokens: true

# access and refresh tokens are session only i.e. removed browser close
sessionCookies: true

# Drools policy support was enabled by default in 4.0 to 4.7,
# but in 4.8 was disabled and marked technology preview
droolsPolicyEnabled: false

secret:
  # Specifies whether the secret resource should be created
  create: true

# OpenID ClientID and secret
# Имя клиента которого мы создали в Keycloak
ClientID: "k8s-prod"
# Secret который я просил записать
ClientSecret: "80a18a0f-0dca-419f-ac1a-766b19732a5d"

# Sets the encryption key used to encode the session state
# If not set it defaults to a random 32 characters alphanumeric string
encryptionKey: ""

# Require the following scopes in the request
scopes: []

# The following claims will be added to the headers of the request
# addClaims:
# - username
# - email
# - some_claim
# Will register three headers: X-Auth-Username, X-Auth-Email, X-Auth-Some-Claim
addClaims: []

# This allows to verify that a received JWT matches the expectations
matchClaims: {}

# These rules specify different authentication strategies for different URLs
# they follow this pattern: "key1=value1|key2=value2"
# Here is a non exhaustive list of key-value pairs
#   uri=/private/*         require access to subpaths of /private
#   roles=admin,user       require the user to have both roles to access
#   require-any-role=true  combined with roles above, switches the conditional from AND to OR
#   white-listed=true      allow anyone to have access
#   methods=GET,POST       apply authentication to these methods
# Настройка прав доступа, пускаем на все path если мы в группе kubernetes-dashboard and kubernetes-reader
#rules: []
rules:
  - "uri=/*|groups=kubernetes-admin,kubernetes-reader"

# This section allows to configure request forwardining
forwarding:
  # Enable or disable forwarding
  enable: false
  # Set this to false to manually generate the secret
  generateSecret: true
  # Username to use to authenticate with identity provider
  username: ''
  # Password to use to authenticate with identity provider
  password: ''
  # List of base domains to forward for, an empty array means "forward any domain"
  domains: []
    # This will forward requests coming for domaina.example.com but also for *.domaina.example.com
    # - domaina.example.com
    # - domainb.example.com

# Print verbose logs
debug: false

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# Expose Prometheus metrics
prometheusMetrics: true

# add any additional command line arguments you want, without dashes
# extraArgs:
# - enable-https-redirection
# - enable-authorization-header=false
# - upstream-timeout=30s
#
extraArgs: []
